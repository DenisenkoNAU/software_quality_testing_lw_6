name: CI Pipeline

on:
  pull_request:
    branches:
      - 'develop'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
        
      - name: Install dependencies
        run: npm install

      - name: Lint code with ESLint
        run: npm run lint

      - name: Run tests with Jest
        run: npm test

  analysis:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Check for review approvals
        uses: actions/github-script@v6
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.data.number
            });
            const approved = reviews.data.filter(r => r.state === 'APPROVED');
            if (approved.length === 0) {
              core.setFailed('No approved code reviews.');
            }

      # - name: Installing Cloc and counting lines of code
      #   run: |
      #     sudo apt-get install -y cloc
      #     cloc src/

      - name: Running SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: cat $SONAR_TOKEN

      # - name: Running SonarQube analysis
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: |
      #     wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
      #     unzip sonar-scanner-cli-4.8.0.2856-linux.zip
      #     export PATH=$PATH:$(pwd)/sonar-scanner-4.8.0.2856-linux/bin
      #     sonar-scanner -Dsonar.token=$SONAR_TOKEN

      # - name: Run Reviewdog flake8
      #   uses: reviewdog/action-flake8@v2
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     reporter: github-pr-review
      #     level: error

      # - name: Run Reviewdog black
      #   uses: reviewdog/action-black@v1
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     reporter: github-pr-review
      #     level: info

      - name: Checking out changes in the develop branch
        run: |
          git checkout develop
          git pull
          git log --oneline --graph
